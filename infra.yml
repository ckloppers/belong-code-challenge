##
# 
# Belong Coding Challenge
# Date - August 2019
#
# Jacobus Kloppers
# Mobile: 0413 691 098
# Website: https://jkloppers.info
# Blog: https://jkloppers.info/blog
# Email: JacobusKloppers@icloud.com
#
# Assumptions: 
# The template will be executed in: us-east-1
# AMI used: ami-467ca739 (us-east-1 ami) 
##

Resources: 
  # A dedicated VPC with a public and private subnet.
  # VPC called myVPC
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-VPC" ]]

  # public Subnet called myPublicSubnet
  myPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: 10.1.10.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]       
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-myPublicSubnet

  # Private Subnet called myPrivateSubnet
  myPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: 10.1.50.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-myPrivateSubnet

  # EC2 in the private subnet
  myEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-467ca739
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref mySecGroup
      SubnetId: !Ref myPrivateSubnet
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-myEC2Instance
  
  # Security group to open port 22 for SSH access to the EC2 
  mySecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-mySecGroup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
